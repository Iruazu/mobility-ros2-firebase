#!/usr/bin/env python3
"""
Phase 2 Minimal Gazebo Launch File - 修正版
軽量なシミュレーション環境でFirebase Bridgeを起動
AMCL + Map Server + Nav2の完全なスタック
"""

from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription, ExecuteProcess, TimerAction
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution
from launch_ros.actions import Node
from launch_ros.substitutions import FindPackageShare
import os


def generate_launch_description():
    """
    完全なNav2スタック + Firebase Bridge を起動

    修正内容:
    - TurtleBot3の標準launchファイルを使用
    - AMCL + Map Server を含む完全なNav2スタック
    - Firebase Bridgeを遅延起動
    """

    # パッケージパスを取得
    pkg_ros2_firebase_bridge = FindPackageShare('ros2_firebase_bridge')
    pkg_turtlebot3_gazebo = FindPackageShare('turtlebot3_gazebo')
    pkg_turtlebot3_navigation2 = FindPackageShare('turtlebot3_navigation2')

    # ===== 環境変数設定 =====
    turtlebot3_model = os.environ.get('TURTLEBOT3_MODEL', 'waffle')

    # ===== TurtleBot3 Gazebo World 起動 =====
    gazebo_launch = IncludeLaunchDescription(
        PythonLaunchDescriptionSource([
            PathJoinSubstitution([
                pkg_turtlebot3_gazebo,
                'launch',
                'turtlebot3_world.launch.py'
            ])
        ])
    )

    # ===== TurtleBot3 Navigation2 起動 (AMCL + Map Server 含む) =====
    navigation2_launch = IncludeLaunchDescription(
        PythonLaunchDescriptionSource([
            PathJoinSubstitution([
                pkg_turtlebot3_navigation2,
                'launch',
                'navigation2.launch.py'
            ])
        ]),
        launch_arguments={
            'use_sim_time': 'true',
        }.items()
    )

    # ===== Firebase Bridge起動 (15秒遅延) =====
    # Nav2が完全に起動するまで待機
    firebase_bridge = TimerAction(
        period=15.0,
        actions=[
            Node(
                package='ros2_firebase_bridge',
                executable='firebase_bridge',
                name='firebase_bridge',
                parameters=[{
                    'robot_id': 'robot_001',
                    'robot_namespace': '/turtlebot3'
                }],
                output='screen'
            )
        ]
    )

    return LaunchDescription([
        # Gazebo World (TurtleBot3標準)
        gazebo_launch,

        # Navigation2 (AMCL + Map Server含む)
        navigation2_launch,

        # Firebase Bridge (遅延起動)
        firebase_bridge,
    ])